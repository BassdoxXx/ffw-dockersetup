services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run --token ${CF_TUNNEL_TOKEN}
    env_file:
      - .env
    networks:
      - core_net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    volumes:
      - ./data/vaultwarden:/data
    environment:
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      # Add more Vaultwarden env vars as needed
    networks:
      - core_net
    expose:
      - "80"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    volumes:
      - ./data/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - core_net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
    networks:
      - core_net

# Datenbanken

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/db/postgres:/var/lib/postgresql/data
    networks:
      - core_net


networks:
  core_net:
    external: true