services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run --token ${CF_TUNNEL_TOKEN}
    env_file:
      - .env
    networks:
      - core_net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    volumes:
      - ./data/vaultwarden:/data
    environment:
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
    networks:
      - core_net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    volumes:
      - ./configs/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=home.ffw-windischletten.de
    networks:
      - core_net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  simple_invites:
    image: bassdoxxx/simple_invites:latest
    container_name: simple_invites
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./app/static:/app/app/static
      - ./data/simple_invites:/data/simple_invites
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=dein_geheimer_schluessel
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - core_net

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
    networks:
      - core_net

  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    restart: unless-stopped
    volumes:
      - ./configs/crowdsec/data:/var/lib/crowdsec/data
      - ./configs/crowdsec/config:/etc/crowdsec
      - /var/log:/var/log:ro
    environment:
      - TZ=${TZ}
    networks:
      - core_net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/db/postgres:/var/lib/postgresql/data
    networks:
      - core_net
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

networks:
  core_net:
    external: true